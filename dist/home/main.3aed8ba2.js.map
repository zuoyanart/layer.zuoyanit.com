{"version":3,"sources":["pages/usercenter/userPro/editPassword.vue","../../node_modules/path-to-regexp/index.js","components/breadCrumb/index.vue","pages/usercenter/main.vue"],"names":[],"mappings":"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","file":"main.3aed8ba2.js","sourceRoot":"..\\..\\src\\site\\home","sourcesContent":["<template>\r\n  <el-form :model=\"ruleForm\" :rules=\"rules\" ref=\"ruleForm\" style=\"width:100%;margin:20px;\">\r\n    <el-form-item label=\"原密码\" prop=\"oldpassword\">\r\n      <el-input type=\"password\" v-model.trim=\"ruleForm.oldpassword\"></el-input>\r\n    </el-form-item>\r\n    <el-form-item label=\"新密码\" prop=\"password\">\r\n      <el-input type=\"password\" v-model.trim=\"ruleForm.password\"></el-input>\r\n    </el-form-item>\r\n    <el-form-item label=\"重复密码\" prop=\"rePassword\">\r\n      <el-input type=\"password\" v-model.trim=\"ruleForm.rePassword\"></el-input>\r\n    </el-form-item>\r\n    <el-form-item>\r\n      <el-button type=\"primary\" @click=\"submitHand\">提交</el-button>\r\n      <el-button @click=\"close\">取消</el-button>\r\n    </el-form-item>\r\n  </el-form>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      ruleForm: {\r\n        oldpassword: '',\r\n        password: '',\r\n        rePassword: '',\r\n      },\r\n      rules: {\r\n        oldpassword: [{\r\n          required: true,\r\n          min: 6,\r\n          max: 20,\r\n          message: \"请填写6-20位的密码\",\r\n          trigger: 'blur'\r\n        }],\r\n        password: [{\r\n          required: true,\r\n          min: 6,\r\n          max: 20,\r\n          message: \"请填写6-20位的密码\",\r\n          trigger: 'blur'\r\n        }],\r\n        rePassword: [{\r\n          required: true,\r\n          min: 6,\r\n          max: 20,\r\n          message: \"请填写6-20位的密码\",\r\n          trigger: 'blur'\r\n        }, {\r\n          validator: this.validatePassword,\r\n          trigger: 'blur'\r\n        }],\r\n      }\r\n    }\r\n  },\r\n  props: {\r\n    layerid: String\r\n  },\r\n  methods: {\r\n    validatePassword(rule, value, callback) {\r\n      if (this.ruleForm.password !== this.ruleForm.rePassword) {\r\n        callback(new Error(\"两次密码不一致\"));\r\n      } else {\r\n        callback();\r\n      }\r\n    },\r\n    async submitHand() {\r\n      this.$refs.ruleForm.validate(async valid => {\r\n        if (valid) {\r\n          let doc = await this.$tools.httpAgent('/user/editPassword', 'put', this.ruleForm);\r\n          if (doc.code === 200) {\r\n            // localStorage.removeItem('jwt');\r\n            // localStorage.removeItem('userMenu');\r\n            this.$layer.close(this.layerid);\r\n          }\r\n        }\r\n      });\r\n    },\r\n    close() {\r\n      this.$layer.close(this.layerid);\r\n    }\r\n  },\r\n  mounted() {\r\n\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n</style>\r\n","/**\n * Expose `pathToRegexp`.\n */\nmodule.exports = pathToRegexp\nmodule.exports.parse = parse\nmodule.exports.compile = compile\nmodule.exports.tokensToFunction = tokensToFunction\nmodule.exports.tokensToRegExp = tokensToRegExp\n\n/**\n * Default configs.\n */\nvar DEFAULT_DELIMITER = '/'\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nvar PATH_REGEXP = new RegExp([\n  // Match escaped characters that would otherwise appear in future matches.\n  // This allows the user to escape special characters that won't transform.\n  '(\\\\\\\\.)',\n  // Match Express-style parameters and un-named parameters with a prefix\n  // and optional suffixes. Matches appear as:\n  //\n  // \":test(\\\\d+)?\" => [\"test\", \"\\d+\", undefined, \"?\"]\n  // \"(\\\\d+)\"  => [undefined, undefined, \"\\d+\", undefined]\n  '(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?'\n].join('|'), 'g')\n\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\nfunction parse (str, options) {\n  var tokens = []\n  var key = 0\n  var index = 0\n  var path = ''\n  var defaultDelimiter = (options && options.delimiter) || DEFAULT_DELIMITER\n  var whitelist = (options && options.whitelist) || undefined\n  var pathEscaped = false\n  var res\n\n  while ((res = PATH_REGEXP.exec(str)) !== null) {\n    var m = res[0]\n    var escaped = res[1]\n    var offset = res.index\n    path += str.slice(index, offset)\n    index = offset + m.length\n\n    // Ignore already escaped sequences.\n    if (escaped) {\n      path += escaped[1]\n      pathEscaped = true\n      continue\n    }\n\n    var prev = ''\n    var name = res[2]\n    var capture = res[3]\n    var group = res[4]\n    var modifier = res[5]\n\n    if (!pathEscaped && path.length) {\n      var k = path.length - 1\n      var c = path[k]\n      var matches = whitelist ? whitelist.indexOf(c) > -1 : true\n\n      if (matches) {\n        prev = c\n        path = path.slice(0, k)\n      }\n    }\n\n    // Push the current path onto the tokens.\n    if (path) {\n      tokens.push(path)\n      path = ''\n      pathEscaped = false\n    }\n\n    var repeat = modifier === '+' || modifier === '*'\n    var optional = modifier === '?' || modifier === '*'\n    var pattern = capture || group\n    var delimiter = prev || defaultDelimiter\n\n    tokens.push({\n      name: name || key++,\n      prefix: prev,\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      pattern: pattern\n        ? escapeGroup(pattern)\n        : '[^' + escapeString(delimiter === defaultDelimiter ? delimiter : (delimiter + defaultDelimiter)) + ']+?'\n    })\n  }\n\n  // Push any remaining characters.\n  if (path || index < str.length) {\n    tokens.push(path + str.substr(index))\n  }\n\n  return tokens\n}\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\nfunction compile (str, options) {\n  return tokensToFunction(parse(str, options))\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction (tokens) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length)\n\n  // Compile all the patterns before compilation.\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$')\n    }\n  }\n\n  return function (data, options) {\n    var path = ''\n    var encode = (options && options.encode) || encodeURIComponent\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i]\n\n      if (typeof token === 'string') {\n        path += token\n        continue\n      }\n\n      var value = data ? data[token.name] : undefined\n      var segment\n\n      if (Array.isArray(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but got array')\n        }\n\n        if (value.length === 0) {\n          if (token.optional) continue\n\n          throw new TypeError('Expected \"' + token.name + '\" to not be empty')\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encode(value[j], token)\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\"')\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment\n        }\n\n        continue\n      }\n\n      if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n        segment = encode(String(value), token)\n\n        if (!matches[i].test(segment)) {\n          throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but got \"' + segment + '\"')\n        }\n\n        path += token.prefix + segment\n        continue\n      }\n\n      if (token.optional) continue\n\n      throw new TypeError('Expected \"' + token.name + '\" to be ' + (token.repeat ? 'an array' : 'a string'))\n    }\n\n    return path\n  }\n}\n\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\nfunction escapeString (str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, '\\\\$1')\n}\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\nfunction escapeGroup (group) {\n  return group.replace(/([=!:$/()])/g, '\\\\$1')\n}\n\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\nfunction flags (options) {\n  return options && options.sensitive ? '' : 'i'\n}\n\n/**\n * Pull out keys from a regexp.\n *\n * @param  {!RegExp} path\n * @param  {Array=}  keys\n * @return {!RegExp}\n */\nfunction regexpToRegexp (path, keys) {\n  if (!keys) return path\n\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g)\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        pattern: null\n      })\n    }\n  }\n\n  return path\n}\n\n/**\n * Transform an array into a regexp.\n *\n * @param  {!Array}  path\n * @param  {Array=}  keys\n * @param  {Object=} options\n * @return {!RegExp}\n */\nfunction arrayToRegexp (path, keys, options) {\n  var parts = []\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source)\n  }\n\n  return new RegExp('(?:' + parts.join('|') + ')', flags(options))\n}\n\n/**\n * Create a path regexp from string input.\n *\n * @param  {string}  path\n * @param  {Array=}  keys\n * @param  {Object=} options\n * @return {!RegExp}\n */\nfunction stringToRegexp (path, keys, options) {\n  return tokensToRegExp(parse(path, options), keys, options)\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {!Array}  tokens\n * @param  {Array=}  keys\n * @param  {Object=} options\n * @return {!RegExp}\n */\nfunction tokensToRegExp (tokens, keys, options) {\n  options = options || {}\n\n  var strict = options.strict\n  var start = options.start !== false\n  var end = options.end !== false\n  var delimiter = options.delimiter || DEFAULT_DELIMITER\n  var endsWith = [].concat(options.endsWith || []).map(escapeString).concat('$').join('|')\n  var route = start ? '^' : ''\n\n  // Iterate over the tokens and create our regexp string.\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i]\n\n    if (typeof token === 'string') {\n      route += escapeString(token)\n    } else {\n      var capture = token.repeat\n        ? '(?:' + token.pattern + ')(?:' + escapeString(token.delimiter) + '(?:' + token.pattern + '))*'\n        : token.pattern\n\n      if (keys) keys.push(token)\n\n      if (token.optional) {\n        if (!token.prefix) {\n          route += '(' + capture + ')?'\n        } else {\n          route += '(?:' + escapeString(token.prefix) + '(' + capture + '))?'\n        }\n      } else {\n        route += escapeString(token.prefix) + '(' + capture + ')'\n      }\n    }\n  }\n\n  if (end) {\n    if (!strict) route += '(?:' + escapeString(delimiter) + ')?'\n\n    route += endsWith === '$' ? '$' : '(?=' + endsWith + ')'\n  } else {\n    var endToken = tokens[tokens.length - 1]\n    var isEndDelimited = typeof endToken === 'string'\n      ? endToken[endToken.length - 1] === delimiter\n      : endToken === undefined\n\n    if (!strict) route += '(?:' + escapeString(delimiter) + '(?=' + endsWith + '))?'\n    if (!isEndDelimited) route += '(?=' + escapeString(delimiter) + '|' + endsWith + ')'\n  }\n\n  return new RegExp(route, flags(options))\n}\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(string|RegExp|Array)} path\n * @param  {Array=}                keys\n * @param  {Object=}               options\n * @return {!RegExp}\n */\nfunction pathToRegexp (path, keys, options) {\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path, keys)\n  }\n\n  if (Array.isArray(path)) {\n    return arrayToRegexp(/** @type {!Array} */ (path), keys, options)\n  }\n\n  return stringToRegexp(/** @type {string} */ (path), keys, options)\n}\n","<template>\r\n  <el-breadcrumb class=\"app-breadcrumb\" separator=\"/\">\r\n    <transition-group name=\"breadcrumb\">\r\n      <el-breadcrumb-item v-for=\"(item,index) in levelList\" :key=\"item.path\">\r\n        <span\r\n          v-if=\"item.redirect==='noRedirect'||index==levelList.length-1\"\r\n          class=\"no-redirect\"\r\n        >{{ item.meta.title }}</span>\r\n        <a v-else @click.prevent=\"handleLink(item)\">{{ item.meta.title }}</a>\r\n      </el-breadcrumb-item>\r\n    </transition-group>\r\n  </el-breadcrumb>\r\n</template>\r\n\r\n<script>\r\nimport pathToRegexp from 'path-to-regexp';\r\nexport default {\r\n  data() {\r\n    return {\r\n      levelList: null\r\n    }\r\n  },\r\n  watch: {\r\n    $route() {\r\n      this.getBreadcrumb()\r\n    }\r\n  },\r\n  created() {\r\n    this.getBreadcrumb()\r\n  },\r\n  methods: {\r\n    getBreadcrumb() {\r\n      console.log(this.$route.matched);\r\n      // only show routes with meta.title\r\n      let matched = this.$route.matched.filter(item => item.meta && item.meta.title);\r\n      const first = matched[0];\r\n      if (!this.isDashboard(first)) {\r\n        matched = [{ path: '/', meta: { title: '首页' } }].concat(matched);\r\n      }\r\n      this.levelList = matched.filter(item => item.meta && item.meta.title && item.meta.breadcrumb !== false);\r\n    },\r\n    isDashboard(route) {\r\n      const name = route && route.name;\r\n      if (!name) {\r\n        return false;\r\n      }\r\n      return name.trim().toLocaleLowerCase() === 'Dashboard'.toLocaleLowerCase();\r\n    },\r\n    pathCompile(path) {\r\n      // To solve this problem https://github.com/PanJiaChen/vue-element-admin/issues/561\r\n      const { params } = this.$route;\r\n      var toPath = pathToRegexp.compile(path);\r\n      return toPath(params);\r\n    },\r\n    handleLink(item) {\r\n      const { redirect, path } = item;\r\n      if (redirect) {\r\n        this.$router.push(redirect);\r\n        return;\r\n      }\r\n      this.$router.push(this.pathCompile(path));\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.app-breadcrumb.el-breadcrumb {\r\n  display: inline-block;\r\n  font-size: 14px;\r\n  line-height: 40px;\r\n  margin-left: 8px;\r\n  vertical-align: middle;\r\n  .no-redirect {\r\n    color: #97a8be;\r\n    cursor: text;\r\n  }\r\n}\r\n</style>","<style lang=\"less\" scoped>\r\n@import \"../../assets/less/usercenter.less\";\r\n</style>\r\n\r\n<style lang=\"less\" scoped>\r\n.el-menu-vertical-demo {\r\n  &:not(.el-menu--collapse) {\r\n    width: 220px;\r\n  }\r\n  & /deep/ .el-menu--inline .el-menu-item {\r\n    background-color: #1f2d3d !important;\r\n    height: 44px !important;\r\n    line-height: 44px !important;\r\n    &:hover {\r\n      background-color: #001528 !important;\r\n    }\r\n    &.is-active {\r\n      color: #fff !important;\r\n      background-color: #1890ff !important;\r\n    }\r\n  }\r\n  & /deep/ .is-active {\r\n    color: #fff !important;\r\n    background-color: #1890ff !important;\r\n  }\r\n}\r\n.collspseicon {\r\n  vertical-align: middle;\r\n  margin-left: -10px;\r\n  font-size: 22px;\r\n  cursor: pointer;\r\n}\r\n</style>\r\n\r\n<template>\r\n  <div id=\"app\" style=\"height:100%;\">\r\n    <div id=\"main-parent\">\r\n      <div id=\"sidebar\">\r\n        <el-menu\r\n          :router=\"true\"\r\n          :default-active=\"activeDef\"\r\n          class=\"el-menu-vertical-demo\"\r\n          background-color=\"#304156\"\r\n          text-color=\"#bfcbd9\"\r\n          active-text-color=\"#409EFF\"\r\n          @select=\"select\"\r\n          :unique-opened=\"true\"\r\n          :collapse=\"isCollapse\"\r\n        >\r\n          <el-menu-item route=\"/usercenter\" index=\"/usercenter\">\r\n            <i class=\"el-icon-menu\"></i>\r\n            <span slot=\"title\">首页</span>\r\n          </el-menu-item>\r\n          <el-menu-item route=\"/usercenter/socket\" index=\"/usercenter/socket\">\r\n            <i class=\"el-icon-s-promotion\"></i>\r\n            <span slot=\"title\">实时推送</span>\r\n          </el-menu-item>\r\n          <el-menu-item route=\"/usercenter/taskgroup\" index=\"/usercenter/taskgroup\">\r\n            <i class=\"el-icon-time\"></i>\r\n            <span slot=\"title\">任务调度</span>\r\n          </el-menu-item>\r\n          <el-submenu index=\"2-4\">\r\n            <template slot=\"title\">\r\n              <i class=\"el-icon-phone-outline\"></i>短信\r\n            </template>\r\n            <el-menu-item route=\"/usercenter/sms/signame\" index=\"/usercenter/sms/signame\">签名</el-menu-item>\r\n            <!-- <el-menu-item route=\"/usercenter/sms/tpl\" index=\"/usercenter/sms/tpl\">模板</el-menu-item> -->\r\n          </el-submenu>\r\n          <!-- <el-submenu index=\"2-5\">\r\n            <template slot=\"title\">\r\n              <i class=\"el-icon-bank-card\"></i>消费记录\r\n            </template>\r\n            <el-menu-item route=\"/usercenter/bank/sale\" index=\"/usercenter/bank/sale\">充值记录</el-menu-item>\r\n            <el-menu-item route=\"/usercenter/bank/buy\" index=\"/usercenter/bank/nuy\">消费记录</el-menu-item>\r\n          </el-submenu>-->\r\n        </el-menu>\r\n      </div>\r\n      <div id=\"main-right\">\r\n        <div id=\"user-nav\">\r\n          <div class=\"menusrc\" style=\"padding:5px 20px;\">\r\n            <i\r\n              class=\"collspseicon el-icon-s-unfold\"\r\n              v-if=\"isCollapse\"\r\n              @click=\"changeCollapse\"\r\n              title=\"展开\"\r\n            ></i>\r\n            <i class=\"collspseicon el-icon-s-fold\" v-else @click=\"changeCollapse\" title=\"收起\"></i>\r\n            <el-button type=\"text\" @click=\"goBack\" style=\"margin-left:30px;\">返回</el-button>\r\n            <!-- 面包屑 -->\r\n            <!-- <base-breadcrumb></base-breadcrumb> -->\r\n          </div>\r\n          <div class=\"userdn\">\r\n            <el-dropdown @command=\"userEvent\">\r\n              <span class=\"el-dropdown-link\">\r\n                <i class=\"pzicon-accountfilling\"></i>\r\n                {{username}}\r\n                <i class=\"el-icon-arrow-down el-icon--right\"></i>\r\n              </span>\r\n              <el-dropdown-menu slot=\"dropdown\">\r\n                <el-dropdown-item command=\"editPassword\">修改密码</el-dropdown-item>\r\n                <el-dropdown-item command=\"loginout\" divided>退出</el-dropdown-item>\r\n              </el-dropdown-menu>\r\n            </el-dropdown>\r\n          </div>\r\n        </div>\r\n        <transition name=\"fade-transform\">\r\n          <router-view></router-view>\r\n        </transition>\r\n      </div>\r\n    </div>\r\n    <div class=\"row-fluid\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport editPassword from './userPro/editPassword';\r\nimport breadCrumb from '../../components/breadCrumb/index';\r\nexport default {\r\n  data() {\r\n    return {\r\n      username: '',\r\n      userMenu: [],\r\n      activeDef: '0',\r\n      isCollapse: false\r\n    };\r\n  },\r\n  methods: {\r\n    userEvent(cmd) { // 用户菜单事件\r\n      if (cmd === 'loginout') {\r\n        localStorage.removeItem('jwt');\r\n        this.$router.push('/');\r\n      } else if (cmd === 'editPassword') {\r\n        this.$layer.iframe({\r\n          content: {\r\n            content: editPassword,\r\n            parent: this,\r\n            data: {\r\n\r\n            }\r\n          },\r\n          area: ['600px', '430px'],\r\n          title: \"修改密码\"\r\n        })\r\n      }\r\n    },\r\n    async init() {\r\n      this.userMenu = JSON.parse(localStorage.getItem('userMenu'));\r\n\r\n    },\r\n    select(index, indexpath) {\r\n      localStorage.setItem('menuIndex', index);\r\n    },\r\n    goBack() {\r\n      this.$router.go(-1);\r\n    },\r\n    changeCollapse() {\r\n      this.isCollapse = !this.isCollapse;\r\n    }\r\n  },\r\n  mounted() {\r\n    const menuIndex = localStorage.getItem('menuIndex');\r\n    if (menuIndex) {\r\n      this.activeDef = menuIndex;\r\n    }\r\n    this.init();\r\n    this.username = JSON.parse(localStorage.getItem('jwt')).username;\r\n  },\r\n  components: {\r\n    'base-breadcrumb': breadCrumb\r\n  }\r\n};\r\n</script>\r\n"]}