{"version":3,"sources":["pages/reg.vue"],"names":[],"mappings":"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","file":"reg.940c95c0.js","sourceRoot":"..\\..\\src\\site\\home","sourcesContent":["<template>\r\n  <div class=\"router-main login-main\">\r\n    <div class=\"login\">\r\n      <h2>\r\n        免费注册\r\n        <span></span>\r\n      </h2>\r\n      <el-form class=\"loginform\" :model=\"form\" :rules=\"rules\" label-width=\"70px\" ref=\"form\">\r\n        <el-form-item label=\"手机号\" prop=\"username\">\r\n          <el-input placeholder=\"该手机号为找回密码唯一途径\" v-model.trim=\"form.username\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"密码\" prop=\"password\">\r\n          <el-input type=\"password\" placeholder=\"密码\" v-model.trim=\"form.password\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"重复密码\" prop=\"repassword\">\r\n          <el-input type=\"password\" placeholder=\"密码\" v-model.trim=\"form.repassword\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"验证码\" prop=\"code\" class=\"code\">\r\n          <el-input placeholder=\"请输入验证码\" v-model.trim=\"form.code\"></el-input>\r\n          <div class=\"img\" v-html=\"src\" @click=\"setSrc\"></div>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"success\" size=\"medium\" style=\"width:100%;\" @click=\"submitHandle\">注册</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      src: '',\r\n      form: {\r\n        username: '',\r\n        password: '',\r\n        repassword: '',\r\n        code: ''\r\n      },\r\n      rules: {\r\n        username: [\r\n          {\r\n            validator: this.validateUsername,\r\n            trigger: 'blur',\r\n            message: '请填写您的手机号'\r\n          }\r\n        ],\r\n        password: [\r\n          {\r\n            validator: this.validatePassword,\r\n            trigger: 'blur',\r\n            message: '请填写6-20位的密码'\r\n          }\r\n        ],\r\n        repassword: [\r\n          {\r\n            validator: this.validateRePassword,\r\n            trigger: 'blur',\r\n            message: '两次密码不一致'\r\n          }\r\n        ],\r\n        code: [\r\n          {\r\n            validator: this.validateCode,\r\n            message: '请填写4位的验证码',\r\n            trigger: 'blur'\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    submitNative() {\r\n      return false;\r\n    },\r\n    validateUsername(rule, value, callback) {\r\n      const len = value.length;\r\n      if (len != 11) {\r\n        callback(new Error('请填写您的手机号'));\r\n      } else {\r\n        callback();\r\n      }\r\n    },\r\n    validatePassword(rule, value, callback) {\r\n      const len = value.length;\r\n      if (len > 20 || len < 6) {\r\n        callback(new Error('请填写密码'));\r\n      } else {\r\n        callback();\r\n      }\r\n    },\r\n    validateRePassword(rule, value, callback) {\r\n      const len = value.length;\r\n      if (len > 20 || len < 6) {\r\n        callback(new Error('请填写密码'));\r\n      } else if (value !== this.form.password) {\r\n        callback(new Error('两次密码不一致'));\r\n      } else {\r\n        callback();\r\n      }\r\n    },\r\n    validateCode(rule, value, callback) {\r\n      const len = value.length;\r\n      if (len == 0 || len > 4) {\r\n        callback(new Error('请填位验证码'));\r\n      } else {\r\n        callback();\r\n      }\r\n    },\r\n    async setSrc() {\r\n      const doc = await this.$tools.httpAgent('/plugin/captcha', 'get', {\r\n        1: 1\r\n      });\r\n      this.src = doc.data.captcha;\r\n      localStorage.setItem('captcha', doc.data.captchaid);\r\n    },\r\n    submitHandle: async function () {\r\n      // const self = this;\r\n      this.$refs.form.validate(async valid => {\r\n        if (valid) {\r\n          this.form.captcha = localStorage.getItem('captcha');\r\n          const doc = await this.$tools.httpAgent('/reg', 'post', this.form, {\r\n            login: false\r\n          });\r\n          if (doc.code === 200) {\r\n            localStorage.setItem('jwt', JSON.stringify(doc.data));\r\n            this.$router.push('/usercenter');\r\n          } else {\r\n            // self.$layer.msg('帐号或者密码错误');\r\n            this.setSrc();\r\n          }\r\n        }\r\n      });\r\n    }\r\n  },\r\n  mounted() {\r\n    this.setSrc();\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.login-main {\r\n  background: linear-gradient(to right, #6041bf, #6076f3);\r\n  padding: 100px 0;\r\n  .login {\r\n    width: 600px;\r\n    margin: 0 auto;\r\n    h2 {\r\n      text-align: center;\r\n      margin-bottom: 100px;\r\n      font-size: 32px;\r\n      color: #fff;\r\n      position: relative;\r\n      span {\r\n        display: inline-block;\r\n        height: 0;\r\n        width: 100px;\r\n        border-top: 3px solid #2ee599;\r\n        position: absolute;\r\n        bottom: -29px;\r\n        left: 50%;\r\n        margin-left: -50px;\r\n      }\r\n    }\r\n    .loginform {\r\n      width: 100%;\r\n      min-height: 300px;\r\n      border-radius: 15px;\r\n      background-color: #fff;\r\n      padding: 50px 30px;\r\n    }\r\n  }\r\n  .code /deep/ .el-form-item__content {\r\n    display: flex;\r\n    .img {\r\n      width: 120px;\r\n      height: 40px;\r\n      margin: 0px 2px 0 15px;\r\n      cursor: pointer;\r\n      svg {\r\n        width: 100%;\r\n        height: 100%;\r\n      }\r\n    }\r\n    .el-input {\r\n      flex: 1;\r\n    }\r\n  }\r\n}\r\n</style>\r\n\r\n\r\n\r\n"]}