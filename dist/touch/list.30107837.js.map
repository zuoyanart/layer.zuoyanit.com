{"version":3,"sources":["pages/list.vue"],"names":[],"mappings":";AAwBA,aAAA,SAAA,mBAAA,IAAA,QAAA,OAAA,MAAA,OAAA,IAAA,KAAA,IAAA,IAAA,KAAA,IAAA,KAAA,KAAA,IAAA,MAAA,KAAA,MAAA,MAAA,OAAA,YAAA,OAAA,OAAA,KAAA,KAAA,QAAA,OAAA,QAAA,QAAA,OAAA,KAAA,MAAA,QAAA,SAAA,kBAAA,IAAA,OAAA,WAAA,IAAA,KAAA,KAAA,KAAA,UAAA,OAAA,IAAA,QAAA,SAAA,QAAA,QAAA,IAAA,IAAA,GAAA,MAAA,KAAA,MAAA,SAAA,MAAA,OAAA,mBAAA,IAAA,QAAA,OAAA,MAAA,OAAA,OAAA,OAAA,SAAA,OAAA,KAAA,mBAAA,IAAA,QAAA,OAAA,MAAA,OAAA,QAAA,KAAA,WAAA,MAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAAA,IAAA,SAAA,CACA,KAAA,WACA,MAAA,CACA,WAAA,GACA,KAAA,GACA,GAAA,EACA,GAAA,KAGA,QATA,WAAA,IAAA,SAAA,kBAAA,mBAAA,KAAA,SAAA,UAAA,IAAA,MAAA,OAAA,OAAA,mBAAA,KAAA,SAAA,UAAA,OAAA,OAAA,SAAA,KAAA,SAAA,MAAA,KAAA,EAUA,MAAA,KAAA,OAAA,OACA,OAAA,MAAA,OACA,MAAA,GAAA,MAAA,GAAA,EACA,KAAA,QAAA,QACA,KAAA,UAAA,QAdA,KAAA,EAAA,IAAA,MAAA,OAAA,SAAA,SAAA,QAAA,SAAA,OAAA,WAAA,OAAA,SAAA,MAAA,KAAA,YAAA,GAgBA,MAAA,CACA,OAAA,WACA,KAAA,KAAA,GACA,IAAA,MAAA,KAAA,OAAA,OACA,IAAA,OAAA,MAAA,OACA,MAAA,IAAA,MAAA,GACA,KAAA,QAAA,QACA,KAAA,UAAA,UAGA,QAAA,CACA,QAAA,WAAA,IAAA,SAAA,kBAAA,mBAAA,KAAA,SAAA,SAAA,QAAA,IAAA,IAAA,OAAA,mBAAA,KAAA,SAAA,WAAA,OAAA,OAAA,UAAA,KAAA,UAAA,MAAA,KAAA,EACA,OADA,UAAA,KAAA,EACA,KAAA,OAAA,UAAA,oBAAA,OAAA,CACA,OAAA,OACA,GAAA,KAAA,GACA,GAAA,KAAA,KAJA,KAAA,EAQA,GAPA,IADA,UAAA,KAOA,KAAA,KAAA,KAAA,KAAA,OAAA,IAAA,KAAA,QACA,IAAA,KAAA,KAAA,OAAA,KAAA,IARA,CAAA,UAAA,KAAA,EAAA,MAAA,OASA,KAAA,MAAA,mBAAA,MAAA,kCATA,UAAA,OAAA,UAAA,KAAA,EAaA,KAAA,MAAA,mBAAA,MAAA,kCACA,KAAA,KAdA,KAAA,EAAA,IAAA,MAAA,OAAA,UAAA,SAAA,SAAA,SAAA,OAAA,SAAA,IAAA,OAAA,SAAA,MAAA,KAAA,YAAA,GAgBA,UAAA,WAAA,IAAA,WAAA,kBAAA,mBAAA,KAAA,SAAA,SAAA,QAAA,IAAA,IAAA,OAAA,mBAAA,KAAA,SAAA,WAAA,OAAA,OAAA,UAAA,KAAA,UAAA,MAAA,KAAA,EACA,OADA,UAAA,KAAA,EACA,KAAA,OAAA,UAAA,mBAAA,OAAA,CACA,OAAA,SAFA,KAAA,EACA,IADA,UAAA,KAIA,KAAA,WAAA,IAAA,KAAA,SAJA,KAAA,EAAA,IAAA,MAAA,OAAA,UAAA,SAAA,SAAA,SAAA,OAAA,SAAA,KAAA,OAAA,WAAA,MAAA,KAAA,YAAA,GAMA,WAAA,SAAA,MACA,OAAA,KAAA,OAAA,WAAA,QAGA,WAAA,IArDA,QAAA,QAAA","file":"list.30107837.js","sourceRoot":"../../src/site/touch","sourcesContent":["\n<template>\n  <div id=\"main\">\n    <yd-flexbox class=\"submenu\">\n      <yd-flexbox-item v-for=\"n in sisterNode\">\n        <router-link :to=\"n.link\">{{n.name}}</router-link>\n      </yd-flexbox-item>\n    </yd-flexbox>\n    <yd-infinitescroll :on-infinite=\"getData\" ref=\"infinitescrollDemo\">\n      <yd-list theme=\"4\" slot=\"list\">\n        <yd-list-item v-for=\"item in list\" :href=\"item.link\">\n          <img slot=\"img\" :src=\"item.timg\">\n          <span slot=\"title\">{{item.title}}</span>\n          <yd-list-other slot=\"other\">\n            <div>{{item.brief}}</div>\n          </yd-list-other>\n        </yd-list-item>\n      </yd-list>\n    </yd-infinitescroll>\n  </div>\n\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      sisterNode: [],\n      list: [],\n      cp: 1,\n      mp: 10\n    };\n  },\n  async mounted() {\n    let param = this.$route.params;\n    let nodeid = param.nodeid;\n    let cp = param.cp ? param.cp : 1;\n    this.getData(nodeid);\n    this.getSister(nodeid);\n  },\n  watch: {\n    $route: function() {\n      this.list = [];\n      let param = this.$route.params;\n      let nodeid = param.nodeid;\n      let cp = param.cp ? param.cp : 1;\n      this.getData(nodeid);\n      this.getSister(nodeid);\n    }\n  },\n  methods: {\n    getData: async function(nodeid) {\n      let doc = await this.$tools.httpAgent(\"/api/article/page\", \"post\", {\n        nodeid: nodeid,\n        cp: this.cp,\n        mp: this.mp\n      });\n\n      this.list = this.list.concat(doc.data.data);\n      if (doc.data.data.length < this.mp) {\n        this.$refs.infinitescrollDemo.$emit(\"ydui.infinitescroll.loadedDone\");\n        return;\n      }\n      /* 单次请求数据完毕 */\n      this.$refs.infinitescrollDemo.$emit(\"ydui.infinitescroll.finishLoad\");\n      this.cp++;\n    },\n    getSister: async function(nodeid) {\n      let doc = await this.$tools.httpAgent(\"/api/tree/sister\", \"post\", {\n        nodeid: nodeid\n      });\n      this.sisterNode = doc.data.nodelist;\n    },\n    formatTime(time) {\n      return this.$tools.formatTime(time);\n    }\n  },\n  components: {}\n};\n</script>\n<style lang=\"less\" scoped>\n.submenu {\n  height: 1rem;\n  text-align: center;\n  border-bottom: 0.2rem;\n  border-bottom: 1px solid #ccc;\n}\n.router-link-active {\n  color: red;\n}\n</style>\n"]}